/* autogenerated by Processing revision 1283 on 2022-10-16 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class final_project extends PApplet {

PImage backgroundMap;
Table table;
TableRow row;
String url_map = "Newyork.png";

float mapGeoLeft   = -74.124987f;       // Longitude degree west
float mapGeoRight  = -73.885786f;       // Longitude degree east
float mapGeoTop    = 40.779157f;       // Latitude degree north
float mapGeoBottom = 40.645007f;          // Latitude degree south

float mapScreenWidth, mapScreenHeight;

float[] st_lat, st_lon, en_lat, en_lon; 

 public void setup() {
    /* size commented out by preprocessor */;
    ellipseMode(CENTER);
    /* smooth commented out by preprocessor */;
    backgroundMap = loadImage(url_map);
    // Set map dimension to dispaly window's width and height
    mapScreenWidth  = width;
    mapScreenHeight = height;
    //Set framerate to 5
    frameRate(5);
    table = loadTable("JC-202209-citibike-tripdata.csv","header");
    st_lat = new float[table.getRowCount()];
    st_lon = new float[table.getRowCount()];
    en_lat = new float[table.getRowCount()];
    en_lon = new float[table.getRowCount()];
    for(int i=0;i<table.getRowCount();i++){
        row = table.getRow(i);
        st_lat[i] = row.getFloat("start_lat");
        st_lon[i] = row.getFloat("start_lng");
        en_lat[i] = row.getFloat("end_lat");
        en_lon[i] = row.getFloat("end_lng");
    }
}

 public void draw() {
    image(backgroundMap, 0, 0, mapScreenWidth, mapScreenHeight);
    for(int i=0; i<st_lat.length; i++){
       // Converting geogrphical coordinates into (x, y) coordinates  
        float x1 = mapScreenWidth*(st_lon[i]-mapGeoLeft)/(mapGeoRight-mapGeoLeft);
        float y1 = mapScreenHeight - mapScreenHeight*(st_lat[i]-mapGeoBottom)/(mapGeoTop-mapGeoBottom);
       // Draw a circle
        noStroke();
        fill(0,255,100);
        ellipse(x1, y1, 5, 5);
    }
    for(int i=0; i<st_lat.length; i++){
       // Converting geogrphical coordinates into (x, y) coordinates  
        float x2 = mapScreenWidth*(en_lon[i]-mapGeoLeft)/(mapGeoRight-mapGeoLeft);
        float y2 = mapScreenHeight - mapScreenHeight*(en_lat[i]-mapGeoBottom)/(mapGeoTop-mapGeoBottom);
       // Draw a circle
        noStroke();
        fill(255,100,0);
        ellipse(x2, y2, 5, 5);
    }

    //เทส1จุด

    //     float x1 = mapScreenWidth*(st_lon[0]-mapGeoLeft)/(mapGeoRight-mapGeoLeft);
    //     float y1 = mapScreenHeight - mapScreenHeight*(st_lat[0]-mapGeoBottom)/(mapGeoTop-mapGeoBottom);
    //    // Draw a circle
    //     noStroke();
    //     fill(0,255,100);
    //     ellipse(x1, y1, 5, 5);
    //     float x2 = mapScreenWidth*(en_lon[0]-mapGeoLeft)/(mapGeoRight-mapGeoLeft);
    //     float y2 = mapScreenHeight - mapScreenHeight*(en_lat[0]-mapGeoBottom)/(mapGeoTop-mapGeoBottom);
    //    // Draw a circle
    //     noStroke();
    //     fill(255,100,0);
    //     ellipse(x2, y2, 5, 5);
}

//  PImage backgroundMap;  // Variable for background map image
//  String[] bus_stops; // String array for storing bus stops 
//  String[] bus_rides; // String array for storing bus rides
//  String[] bus_time; // String array for storing bus rides

//  // URLs of online text files
//  /*
//  String url_map = "https://cpemis.eng.cmu.ac.th/~santi/vip_book_files/lisbon_roads.png";
//  String url_bus_stops = "https://cpemis.eng.cmu.ac.th/~santi/vip_book_files/stops.txt";
//  String url_bus_rides = "https://cpemis.eng.cmu.ac.th/~santi/vip_book_files/rides.txt";
//  String url_bus_time = "https://cpemis.eng.cmu.ac.th/~santi/vip_book_files/time.txt";
//  */

//  String url_map = "data/lisbon_roads.png";
//  String url_bus_stops = "data/stops.txt";
//  String url_bus_rides = "data/rides.txt";
//  String url_bus_time = "data/time.txt";

//  float mapGeoLeft   = -9.253986175115207;       // Longitude degree west
//  float mapGeoRight  = -9.092649769585254;       // Longitude degree east
//  float mapGeoTop    = 38.799342105263165;       // Latitude degree north
//  float mapGeoBottom = 38.665570175438;          // Latitude degree south

//  float mapScreenWidth, mapScreenHeight;  // Variables for dimension of map in pixels

//  int c = 0; // Variable for line index

//  void setup(){
//    size(600, 600);
//    ellipseMode(CENTER);
//    smooth();
//    backgroundMap = loadImage(url_map);
//    bus_stops = loadStrings(url_bus_stops);
//    bus_rides = loadStrings(url_bus_rides);
//    bus_time = loadStrings(url_bus_time);
//    // Set map dimension to dispaly window's width and height
//    mapScreenWidth  = width;
//    mapScreenHeight = height;
//    //Set framerate to 5
//    frameRate(5);
//  }

//  void draw(){
//    // Display background map
//    image(backgroundMap, 0, 0, mapScreenWidth, mapScreenHeight);
//    // Display rides
//    if(c < bus_stops.length){
//      String[] s = split(bus_stops[c], ',');
//      String[] r = split(bus_rides[c], ',');
    
//      for(int i=0; i<s.length; i+=2){
//        // Converting geogrphical coordinates into (x, y) coordinates  
//        float x = mapScreenWidth*(float(s[i])-mapGeoLeft)/(mapGeoRight-mapGeoLeft);
//        float y = mapScreenHeight - mapScreenHeight*(float(s[i+1])-mapGeoBottom)/(mapGeoTop-mapGeoBottom);
//        // Radius of circle varies with the number of rides
//        float rad = float(r[i/2]);
//        // Draw a circle
//        noStroke();
//        fill(0, 255, 255, 100);
//        ellipse(x, y, rad/2, rad/2);
//      }
    
//      // Display time (hour)
//      textSize(80);
//      fill(255, 255, 0, 150);
//      text(bus_time[c], width-130, height-50);
    
//      // increment line index
//      c++;
//    }
//  }


  public void settings() { size(1000, 800);
smooth(); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "final_project" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
